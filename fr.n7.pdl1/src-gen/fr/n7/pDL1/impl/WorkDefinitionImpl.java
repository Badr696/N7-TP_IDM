/**
 * generated by Xtext 2.32.0
 */
package fr.n7.pDL1.impl;

import fr.n7.pDL1.GestionRessources;
import fr.n7.pDL1.PDL1Package;
import fr.n7.pDL1.WorkDefinition;
import fr.n7.pDL1.WorkSequence;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectResolvingEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Work Definition</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.n7.pDL1.impl.WorkDefinitionImpl#getName <em>Name</em>}</li>
 *   <li>{@link fr.n7.pDL1.impl.WorkDefinitionImpl#getGestionressource <em>Gestionressource</em>}</li>
 *   <li>{@link fr.n7.pDL1.impl.WorkDefinitionImpl#getLinksToPredecessors <em>Links To Predecessors</em>}</li>
 *   <li>{@link fr.n7.pDL1.impl.WorkDefinitionImpl#getLinksToSuccessors <em>Links To Successors</em>}</li>
 * </ul>
 *
 * @generated
 */
public class WorkDefinitionImpl extends ProcessElementImpl implements WorkDefinition
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getGestionressource() <em>Gestionressource</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGestionressource()
   * @generated
   * @ordered
   */
  protected EList<GestionRessources> gestionressource;

  /**
   * The cached value of the '{@link #getLinksToPredecessors() <em>Links To Predecessors</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLinksToPredecessors()
   * @generated
   * @ordered
   */
  protected WorkSequence linksToPredecessors;

  /**
   * The cached value of the '{@link #getLinksToSuccessors() <em>Links To Successors</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLinksToSuccessors()
   * @generated
   * @ordered
   */
  protected WorkSequence linksToSuccessors;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected WorkDefinitionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PDL1Package.Literals.WORK_DEFINITION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PDL1Package.WORK_DEFINITION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<GestionRessources> getGestionressource()
  {
    if (gestionressource == null)
    {
      gestionressource = new EObjectResolvingEList<GestionRessources>(GestionRessources.class, this, PDL1Package.WORK_DEFINITION__GESTIONRESSOURCE);
    }
    return gestionressource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public WorkSequence getLinksToPredecessors()
  {
    if (linksToPredecessors != null && linksToPredecessors.eIsProxy())
    {
      InternalEObject oldLinksToPredecessors = (InternalEObject)linksToPredecessors;
      linksToPredecessors = (WorkSequence)eResolveProxy(oldLinksToPredecessors);
      if (linksToPredecessors != oldLinksToPredecessors)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, PDL1Package.WORK_DEFINITION__LINKS_TO_PREDECESSORS, oldLinksToPredecessors, linksToPredecessors));
      }
    }
    return linksToPredecessors;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public WorkSequence basicGetLinksToPredecessors()
  {
    return linksToPredecessors;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLinksToPredecessors(WorkSequence newLinksToPredecessors)
  {
    WorkSequence oldLinksToPredecessors = linksToPredecessors;
    linksToPredecessors = newLinksToPredecessors;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PDL1Package.WORK_DEFINITION__LINKS_TO_PREDECESSORS, oldLinksToPredecessors, linksToPredecessors));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public WorkSequence getLinksToSuccessors()
  {
    if (linksToSuccessors != null && linksToSuccessors.eIsProxy())
    {
      InternalEObject oldLinksToSuccessors = (InternalEObject)linksToSuccessors;
      linksToSuccessors = (WorkSequence)eResolveProxy(oldLinksToSuccessors);
      if (linksToSuccessors != oldLinksToSuccessors)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, PDL1Package.WORK_DEFINITION__LINKS_TO_SUCCESSORS, oldLinksToSuccessors, linksToSuccessors));
      }
    }
    return linksToSuccessors;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public WorkSequence basicGetLinksToSuccessors()
  {
    return linksToSuccessors;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLinksToSuccessors(WorkSequence newLinksToSuccessors)
  {
    WorkSequence oldLinksToSuccessors = linksToSuccessors;
    linksToSuccessors = newLinksToSuccessors;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PDL1Package.WORK_DEFINITION__LINKS_TO_SUCCESSORS, oldLinksToSuccessors, linksToSuccessors));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PDL1Package.WORK_DEFINITION__NAME:
        return getName();
      case PDL1Package.WORK_DEFINITION__GESTIONRESSOURCE:
        return getGestionressource();
      case PDL1Package.WORK_DEFINITION__LINKS_TO_PREDECESSORS:
        if (resolve) return getLinksToPredecessors();
        return basicGetLinksToPredecessors();
      case PDL1Package.WORK_DEFINITION__LINKS_TO_SUCCESSORS:
        if (resolve) return getLinksToSuccessors();
        return basicGetLinksToSuccessors();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PDL1Package.WORK_DEFINITION__NAME:
        setName((String)newValue);
        return;
      case PDL1Package.WORK_DEFINITION__GESTIONRESSOURCE:
        getGestionressource().clear();
        getGestionressource().addAll((Collection<? extends GestionRessources>)newValue);
        return;
      case PDL1Package.WORK_DEFINITION__LINKS_TO_PREDECESSORS:
        setLinksToPredecessors((WorkSequence)newValue);
        return;
      case PDL1Package.WORK_DEFINITION__LINKS_TO_SUCCESSORS:
        setLinksToSuccessors((WorkSequence)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PDL1Package.WORK_DEFINITION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case PDL1Package.WORK_DEFINITION__GESTIONRESSOURCE:
        getGestionressource().clear();
        return;
      case PDL1Package.WORK_DEFINITION__LINKS_TO_PREDECESSORS:
        setLinksToPredecessors((WorkSequence)null);
        return;
      case PDL1Package.WORK_DEFINITION__LINKS_TO_SUCCESSORS:
        setLinksToSuccessors((WorkSequence)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PDL1Package.WORK_DEFINITION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case PDL1Package.WORK_DEFINITION__GESTIONRESSOURCE:
        return gestionressource != null && !gestionressource.isEmpty();
      case PDL1Package.WORK_DEFINITION__LINKS_TO_PREDECESSORS:
        return linksToPredecessors != null;
      case PDL1Package.WORK_DEFINITION__LINKS_TO_SUCCESSORS:
        return linksToSuccessors != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //WorkDefinitionImpl
